import java.util.Stack;

public class ValidParenStack {
    Stack<Character> str = new Stack<>();
   
    public boolean isValid(String s) {
        if(s.length()%2!=0){
            return false;
        }
        char x;
        for (int i = 0; i < s.length() ; i++) {
            x = s.charAt(i);
            switch (x){
                case '{': str.push(x);
                          break;
                case '(': str.push(x);
                          break;
                case '[': str.push(x);
                          break;

                case ')': if(!str.isEmpty() && str.peek() == '(')
                             str.pop();
                           else str.push(x);
                           break;
                case '}':  if(!str.isEmpty() && str.peek() == '{')
                              str.pop();
                           else str.push(x);
                           break;
                case ']':  if(!str.isEmpty() && str.peek() == '[')
                              str.pop();
                           else str.push(x);
                           break;
                default: break;
            }
        }
        return str.isEmpty();
    }

    public static void main(String[] args) {
        ValidParenStack obj = new ValidParenStack();
        boolean b;
        String s = "(]";
        System.out.println(s.length());
        b = obj.isValid(s);
        System.out.println(b);
    }

}
